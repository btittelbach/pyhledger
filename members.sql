CREATE TABLE "contact" (
	`p_id`	INTEGER,
	`ct_id`	INTEGER,
	`c_contact`	TEXT
);

CREATE TABLE "contacttype" (
	`ct_id`	INTEGER,
	`ct_type`	TEXT
);
INSERT INTO contacttype VALUES(1,"handy");
INSERT INTO contacttype VALUES(2,"email");
INSERT INTO contacttype VALUES(3,"homeaddress");
INSERT INTO contacttype VALUES(4,"xmpp");


CREATE TABLE "persons" (
	`p_id`	INTEGER NOT NULL,
	`p_name`	TEXT NOT NULL,
	`p_birthday`	date,
	`p_note`	TEXT,
	`p_nick`	TEXT
);
CREATE UNIQUE INDEX person_nick on persons(p_nick);


-- for additional search strings / regex that can't be generated by permutating whitespace separted substrings of p_name
CREATE TABLE "wiretransfers" (
	`p_id`	INTEGER NOT NULL,
	`w_searchregex`	TEXT NOT NULL
);

-- member from month x to and including month y and amout of monthly membershipfee to pay in that time period
CREATE TABLE "membership" (
	`p_id`	INTEGER NOT NULL,
	`m_firstmonth`	DATE NOT NULL,
	`m_lastmonth`	DATE,
	`m_fee`	REAL NOT NULL
);
CREATE UNIQUE INDEX membership_primary_key on membership(p_id,m_firstmonth,m_lastmonth);

CREATE VIEW "wiki_active_members_list" AS SELECT p_nick, p_name, replace(lower(trim(p_name))," ","_")||".jpg" as "p_fotofile" ,c_contact,p_id, contact.rowid as "c_id" from persons left join "membership" using (p_id) left join "contact" using (p_id) where m_firstmonth <= date('now') and (m_lastmonth is null or m_lastmonth is "" or m_lastmonth > date('now')) and (ct_id is 2 or ct_id is null);
CREATE TRIGGER member_name_change
INSTEAD OF UPDATE OF p_name ON "wiki_active_members_list"
BEGIN
  UPDATE persons SET p_name=NEW.p_name WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER member_nick_change
INSTEAD OF UPDATE OF p_nick ON "wiki_active_members_list"
BEGIN
  UPDATE persons SET p_nick=NEW.p_nick WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER member_email_change
INSTEAD OF UPDATE OF c_contact ON "wiki_active_members_list"
BEGIN
  INSERT INTO "contact"("rowid","p_id","ct_id","c_contact") VALUES (NEW.c_id,NEW.p_id,2,NEW.c_contact);
END;

CREATE VIEW "paying_members_list" AS SELECT p_nick, p_name, p_birthday, p_note, m_firstmonth, m_lastmonth, m_fee, replace(lower(trim(p_name))," ","_")||".jpg" as "p_fotofile" ,c_contact,p_id, contact.rowid as "c_id" from persons left join "membership" using (p_id) left join "contact" using (p_id) where m_firstmonth <= date('now') and (m_lastmonth is null or m_lastmonth is "" or m_lastmonth > date('now')) and (ct_id is 2 or ct_id is null);
CREATE TRIGGER paymember_name_change
INSTEAD OF UPDATE OF p_name ON "paying_members_list"
BEGIN
  UPDATE persons SET p_name=NEW.p_name WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_nick_change
INSTEAD OF UPDATE OF p_nick ON "paying_members_list"
BEGIN
  UPDATE persons SET p_nick=NEW.p_nick WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_birthday_change
INSTEAD OF UPDATE OF p_birthday ON "paying_members_list"
BEGIN
  UPDATE persons SET p_birthday=NEW.p_birthday WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_note_change
INSTEAD OF UPDATE OF p_note ON "paying_members_list"
BEGIN
  UPDATE persons SET p_note=NEW.p_note WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_firstmonth_change
INSTEAD OF UPDATE OF m_firstmonth ON "paying_members_list"
BEGIN
  UPDATE membership SET m_firstmonth=NEW.m_firstmonth WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_lastmonth_change
INSTEAD OF UPDATE OF m_lastmonth ON "paying_members_list"
BEGIN
  UPDATE membership SET m_lastmonth=NEW.m_lastmonth WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_fee_change
INSTEAD OF UPDATE OF m_fee ON "paying_members_list"
BEGIN
  UPDATE membership SET m_fee=NEW.m_fee WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER paymember_email_change
INSTEAD OF UPDATE OF c_contact ON "paying_members_list"
BEGIN
  INSERT INTO "contact"("rowid","p_id","ct_id","c_contact") VALUES (NEW.c_id,NEW.p_id,2,NEW.c_contact);
END;

CREATE VIEW wiki_accounts AS SELECT p_nick, p_name, p_birthday, p_note,c_contact,p_id, contact.rowid as "c_id" from persons left join "contact" using (p_id) where (ct_id is 2 or ct_id is null);
CREATE TRIGGER wiki_accounts_name_change
INSTEAD OF UPDATE OF p_name ON "wiki_accounts"
BEGIN
  UPDATE persons SET p_name=NEW.p_name WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER wiki_accounts_nick_change
INSTEAD OF UPDATE OF p_nick ON "wiki_accounts"
BEGIN
  UPDATE persons SET p_nick=NEW.p_nick WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER wiki_accounts_birthday_change
INSTEAD OF UPDATE OF p_birthday ON "wiki_accounts"
BEGIN
  UPDATE persons SET p_birthday=NEW.p_birthday WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER wiki_accounts_note_change
INSTEAD OF UPDATE OF p_note ON "wiki_accounts"
BEGIN
  UPDATE persons SET p_note=NEW.p_note WHERE p_id=NEW.p_id;
END;
CREATE TRIGGER wiki_accounts_email_change
INSTEAD OF UPDATE OF c_contact ON "wiki_accounts"
BEGIN
  INSERT INTO "contact"("rowid","p_id","ct_id","c_contact") VALUES (NEW.c_id,NEW.p_id,2,NEW.c_contact);
END;

